buildscript {
    repositories {
        jcenter()
    }
}
plugins {
    id 'kotlin-multiplatform' version '1.3.70'
    id 'org.jetbrains.kotlin.frontend' version '0.0.45'
}
repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlin-js-wrappers" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven {url = "https://dl.bintray.com/kotlin/kotlin-eap"}
    maven {url = "http://dl.bintray.com/kotlin/kotlinx.html"}
    mavenCentral()
}

def kotlin_version = '1.3.70'
def ktor_version = '1.2.3'
def logback_version = '1.2.3'
def pre_version = "94"

kotlin {
    jvm()
    js {
        // for translation kotlin into js
        compilations.all {
            kotlinOptions {
                languageVersion = "1.3"
                moduleKind = "commonjs"
                sourceMap = true
                sourceMapEmbedSources = "always"
                metaInfo = true
            }
        }
        compilations.main {
            tasks.getByName(compileKotlinTaskName).kotlinOptions {
                main = "call"
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains:kotlin-css:1.0.0-pre.$pre_version-kotlin-$kotlin_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation "org.jetbrains:kotlin-css:1.0.0-pre.$pre_version-kotlin-$kotlin_version"
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "org.jetbrains:kotlin-css-jvm:1.0.0-pre.$pre_version-kotlin-$kotlin_version"
                implementation 'org.postgresql:postgresql:42.2.16'
                implementation "io.ktor:ktor-client-apache:$ktor_version"
                implementation "org.jetbrains.exposed:exposed-core:0.24.1"
                implementation "org.jetbrains.exposed:exposed-dao:0.24.1"
                implementation "org.jetbrains.exposed:exposed-jdbc:0.24.1"
                implementation "org.jetbrains.exposed:exposed-java-time:0.24.1"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
                implementation "org.jetbrains:kotlin-extensions:1.0.1-pre.$pre_version-kotlin-$kotlin_version"
                implementation "org.jetbrains:kotlin-css:1.0.0-pre.$pre_version-kotlin-$kotlin_version"
                implementation "org.jetbrains:kotlin-css-js:1.0.0-pre.$pre_version-kotlin-$kotlin_version"
                implementation "org.jetbrains:kotlin-react:16.13.0-pre.$pre_version-kotlin-$kotlin_version"
                implementation "org.jetbrains:kotlin-react-dom:16.13.0-pre.$pre_version-kotlin-$kotlin_version"
                implementation "org.jetbrains:kotlin-styled:1.0.0-pre.$pre_version-kotlin-$kotlin_version"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}
kotlinFrontend {
    npm {
        dependency("core-js", "~3.1.4")
        dependency("kotlinx-html", "0.7.1")

        dependency("@jetbrains/kotlin-extensions", "1.0.1-pre.91")
        dependency("@jetbrains/kotlin-css", "1.0.0-pre.91")
        dependency("@jetbrains/kotlin-css-js", "1.0.0-pre.91")

        dependency("react", "16.13.0")
        dependency("react-dom", "16.13.0")
        dependency("inline-style-prefixer", "5.1.2")

        dependency("styled-components", "4.4.1")

    }
    sourceMaps = false
    webpackBundle {
        port = 8080
        bundleName = "main"
        proxyUrl = "http://0.0.0.0:8081"
        sourceMapEnabled = true
        // mode = "development"
        mode = "production"
    }
}
ktor {
    port = 8081
    mainClass = "io.ktor.server.netty.EngineMain"
}